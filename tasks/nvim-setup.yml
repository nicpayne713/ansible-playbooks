- name: Install System Packages required for nvim
  # become_user: root
  become: true
  apt:
    name: 
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - cmake
      - libncurses5-dev
      - g++
      - python-dev
      - python3-dev
      - python3-pip
      - ruby
      - ruby-dev

- name: Clone Neovim
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim.git'
    dest: "{{ lookup('env', 'HOME') }}/third-party/neovim"
    update: yes
    version: v0.7.0
  ignore_errors: yes

- name: Build neovim
  become_user: root
  shell: "cd {{ lookup('env', 'HOME') }}/third-party/neovim && sudo make CMAKE_BUILD_TYPE=RelWithDebInfo"

- name: Install neovim
  shell: "cd {{ lookup('env', 'HOME') }}/third-party/neovim && sudo make install"

- name: Check if pynvim venv3 exists
  stat:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/.venv3"
  register: pynvim_venv3_exists

- name: Create pynvim3 environment 
  when: pynvim_venv3_path.stat.islnk is not defined
  shell: |
    cd {{ lookup('env', 'HOME') }}/.config/nvim/
    python3 -m venv .venv3  --prompt nvim3

- name: Install pynvim into venv3
  pip:
    name: pynvim
    virtualenv: "{{ lookup('env', 'HOME') }}/.config/nvim/.venv3"
    virtualenv_command: python3 -m venv

- name: Check if pynvim venv2 exists
  stat:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/.venv2"
  register: pynvim_venv2_exists

- name: Install neovim venv2
  when: pynvim_venv2_path.stat.islnk is not defined
  shell: |
    cd {{ lookup('env', 'HOME') }}/.config/nvim/
    virtualenv -p /usr/bin/python .venv2  --prompt nvim2

- name: Install pynvim into venv2
  pip:
    name: pynvim
    virtualenv: "{{ lookup('env', 'HOME') }}/.config/nvim/.venv2"

# - name: Neovim Plugin Development 1
#   become_user: root
#   apt: name=luarocks
#   tags:
#     - install
#     - terminal
#     - neovim
#     - nvim

# - name: Neovim Plugin Development 2 luacheck
#   shell: luarocks install luacheck
#   become_user: root
#   tags:
#     - install
#     - terminal
#     - neovim
#     - nvim

- name: Install Vim-Plug
  shell: curl -fLo {{ lookup('env', 'HOME') }}/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  tags:
    - install
    - terminal
    - dotfiles
    - plugged
    - neovim
    - nvim

- name: Install vim Plugins
  ignore_errors: yes
  shell: nvim -u ~/.config/nvim/plugins.vim +PlugInstall +qall
  tags:
    - install
    - terminal
    - dotfiles
    - neovim
    - nvim

- name: install python lsp
  when: pylsp_path.stat.islnk is not defined
  tags:
    -lsp
    - python-lsp
  block:
  - name: Setup python-lsp-server
    shell: pipx install 'python-lsp-server[all]' --force

  - name: Setup pylsp-mypy
    shell: pipx inject python-lsp-server pylsp-mypy --force

  - name: Setup jedi-language-server
    shell: pipx install jedi-language-server --force

- name: check is yaml-language-server installed
  shell: command -v yaml-language-server
  register: yamllsp_exists
  ignore_errors: yes
  tags:
    - lsp
    - yaml-lsp

- name: Setup yaml language server
  when: yamllsp_path.stat.islnk is not defined
  shell: npm i -g yaml-language-server@latest
  tags:
    - lsp
    - yaml-lsp

- name: check is bashlsp installed
  shell: command -v bash-language-server
  register: bashlsp_exists
  ignore_errors: yes
  tags:
    - lsp
    - bash-lsp

- name: Setup bash language server
  when: bashlsp_path.stat.islnk is not defined
  shell: npm i -g bash-language-server@latest
  tags:
    - lsp
    - bash-lsp

- name: Setup jedi-language-server
  shell: pipx install jedi-language-server --force
  tags:
    - install
    - terminal
    - dotfiles
    - neovim
    - nvim
    - python-lsp

- name: Setup black 
  shell: pipx install git+https://github.com/psf/black.git@235412635e91950c8ef2d9ebe777f97fffd4f01d  --force # version 20.8b1
  tags:
    - install
    - terminal
    - dotfiles
    - neovim
    - nvim
    - python-lsp
